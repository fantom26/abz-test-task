{"version":3,"file":"static/js/641.bb269347.chunk.js","mappings":"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","sources":["store/position/positions.selectors.ts","store/access/access.selectors.ts","components/cards/user/index.tsx","store/user/user.selectors.ts","pages/home/components/get/index.tsx","utils/helpers/get-image.helper.ts","pages/home/components/hero/index.tsx","components/form/file-upload/index.tsx","components/form/input/index.tsx","components/form/form.tsx","components/form/radio/index.tsx","utils/helpers/get-media-dimensions.helper.ts","utils/helpers/check--file-resolution.hepler.ts","utils/schemas/user.schema.ts","utils/helpers/check-file-size.hepler.ts","utils/helpers/check-file-type.helper.ts","pages/home/components/post/index.tsx","pages/home/index.tsx"],"sourcesContent":["import { RootState } from \"store\";\n\nexport const getAllPositons = (state: RootState) => state.position;\n","import { RootState } from \"store\";\n\nexport const getAccesses = (state: RootState) => state.access;\n","import { FC } from \"react\";\n\nimport { Typography } from \"components/ui\";\nimport { IMAGES } from \"utils/constants\";\nimport { IUser } from \"utils/declarations\";\n\nexport const UserCard: FC<{ info: IUser }> = (props) => {\n  const { photo, name, position, email, phone } = props.info;\n\n  return (\n    <div className=\"user\">\n      <div className=\"user__img\">{photo ? <img src={photo} alt=\"User's photo\" loading=\"lazy\" /> : IMAGES.user}</div>\n      <div className=\"user__name\" data-title={name}>\n        <Typography tag=\"h3\" center>\n          {name}\n        </Typography>\n      </div>\n      <div className=\"user__position\" data-title={position}>\n        <Typography tag=\"p\" center>\n          {position}\n        </Typography>\n      </div>\n      <div className=\"user__email\" data-title={email}>\n        <Typography tag=\"p\" center>\n          {email}\n        </Typography>\n      </div>\n      <Typography tag=\"p\" center>\n        {phone}\n      </Typography>\n    </div>\n  );\n};\n","import { RootState } from \"store\";\n\nexport const getAllUsers = (state: RootState) => state.user;\n","import { useEffect } from \"react\";\n\nimport { UserCard } from \"components/cards\";\nimport { Button, Container, Loader, Typography } from \"components/ui\";\nimport { useAppSelector, useDispatchedActions, useTranslation } from \"hooks\";\nimport { getAllUsers } from \"store/selectors\";\n\nexport const Get = () => {\n  const t = useTranslation();\n\n  const { page, limit, usersStatus, error, users, hasMore } = useAppSelector(getAllUsers);\n  const { getUsers, incrementPage } = useDispatchedActions();\n\n  const loadMoreItems = () => {\n    getUsers({ page, count: limit });\n    incrementPage();\n  };\n\n  useEffect(() => {\n    if (usersStatus === \"idle\") {\n      loadMoreItems();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [usersStatus]);\n\n  return (\n    <section className=\"get\" id=\"users\">\n      <Container>\n        <Typography tag=\"h2\" variant=\"h1\" center>\n          {t.pages.home.get.title}\n        </Typography>\n        {error && (\n          <Typography variant=\"h1\" className=\"get__error\" center>\n            {error}\n          </Typography>\n        )}\n        <ul className=\"get__users\">\n          {users.map((user) => (\n            <UserCard key={user.id} info={user} />\n          ))}\n        </ul>\n        {usersStatus !== \"loading\" && hasMore && <Button onClick={loadMoreItems}>{t.btn.showMore}</Button>}\n        {usersStatus === \"loading\" && <Loader />}\n      </Container>\n    </section>\n  );\n};\n","export const getImage = (tag: string) => {\n  const images: Record<string, string> = {\n    // hero\n    heroBg1x: \"/abz-test-task/img/hero/img@1x.jpg\",\n    heroBg2x: \"/abz-test-task/img/hero/img@2x.jpg\",\n    heroBg1xMob: \"/abz-test-task/img/hero/img@1x-mobile.jpg\",\n    heroBg2xMob: \"/abz-test-task/img/hero/img@2x-mobile.jpg\"\n  };\n\n  if (images.hasOwnProperty(tag)) {\n    return images[tag];\n  }\n\n  return \"\";\n};\n","import { FC } from \"react\";\n\nimport { Button, Container, Typography } from \"components/ui\";\nimport { useTranslation } from \"hooks\";\nimport { getImage } from \"utils/helpers\";\n\nexport const Hero: FC = () => {\n  const t = useTranslation();\n  return (\n    <section className=\"hero\">\n      <Container>\n        <div className=\"hero-wrapper\">\n          <div className=\"hero-bg\">\n            <picture>\n              <source srcSet={`${getImage(\"heroBg1xMob\")} 1x, ${getImage(\"heroBg2xMob\")} 2x`} type=\"image/jpg\" media=\"(max-width: 576px)\" />\n              <img src={getImage(\"heroBg1x\")} srcSet={getImage(\"heroBg2x\")} width=\"1170\" height=\"650\" loading=\"lazy\" alt=\"Ukrainian lanscape\" />\n            </picture>\n          </div>\n          <div className=\"hero-info\">\n            <Typography tag=\"h1\" variant=\"h1\" color=\"white\" center>\n              {t.pages.home.hero.title}\n            </Typography>\n            <Typography tag=\"p\" color=\"white\" center>\n              {t.pages.home.hero.description}\n            </Typography>\n            <Button path=\"#sign\" hashLink>\n              {t.navigation.signUp}\n            </Button>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\n","import { FC, InputHTMLAttributes } from \"react\";\n\nimport { Controller, useFormContext } from \"react-hook-form\";\n\ninterface FileUploadProps extends InputHTMLAttributes<HTMLInputElement> {\n  error?: boolean;\n  helperText?: string;\n  value?: any;\n  onChange: (e: any) => void;\n}\n\nexport interface ControlledFileUploadProps {\n  name: string;\n}\n\nexport const FileUpload: FC<FileUploadProps> = (props) => {\n  const { value, onChange, error, helperText, ...rest } = props;\n\n  const getClasses = () => {\n    let classNames = \"form-file-upload \";\n\n    if (error) classNames += \" error\";\n\n    if (value.length) classNames += \" load\";\n\n    return classNames;\n  };\n\n  return (\n    <div className={getClasses()}>\n      <label className=\"form-file-upload__wrapper\">\n        <input className=\"visually-hidden\" onChange={(e) => onChange(e.target.files)} type=\"file\" value={value.filename} accept=\".jpg,.jpeg\" {...rest} />\n        <span className=\"form-file-upload__btn\">Upload</span>\n        <span className=\"form-file-upload__name\">{value.length ? value[0].name : \"Upload your photo\"}</span>\n      </label>\n      {helperText && <span className=\"form-error\">{helperText}</span>}\n    </div>\n  );\n};\n\nexport const ControlledFileUpload: FC<ControlledFileUploadProps> = (props) => {\n  // **Props\n  const { name } = props;\n\n  // **Form\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      defaultValue={[]}\n      render={({ field: { value, onChange }, fieldState: { error } }) => (\n        <FileUpload value={value} onChange={onChange} error={!!error} helperText={error?.message} />\n      )}\n    />\n  );\n};\n","import { FC, InputHTMLAttributes } from \"react\";\n\nimport { Controller, useFormContext } from \"react-hook-form\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  error?: boolean;\n  placeholder?: string;\n  helperText?: string;\n}\n\nexport interface ControlledInputProps extends InputProps {\n  name: string;\n}\n\nexport const Input: FC<InputProps> = (props) => {\n  // **Props\n  const { placeholder, error, helperText, ...rest } = props;\n\n  const getClasses = () => {\n    let classNames = \"form-input \";\n\n    if (error) classNames += \"error\";\n\n    return classNames;\n  };\n\n  return (\n    <div className={getClasses()}>\n      <div className=\"form-input__wrapper\">\n        <input className=\"form-input__wrapper-input\" type=\"text\" id={rest.name} placeholder=\" \" {...rest} />\n        <label htmlFor={rest.name} className=\"form-input__label\">\n          {placeholder}\n        </label>\n        <fieldset className=\"form-input__fieldset\">\n          <legend className=\"form-input__legend\">\n            <span>{placeholder}</span>\n          </legend>\n        </fieldset>\n      </div>\n      {helperText && <span className={`${error ? \"form-error\" : \"form-text-helper\"}`}>{helperText}</span>}\n    </div>\n  );\n};\n\nexport const ControlledInput: FC<ControlledInputProps> = (props) => {\n  // **Props\n  const { name, defaultValue = \"\", helperText = \"\", placeholder = \"\", ...rest } = props;\n\n  // **Form\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      defaultValue={defaultValue}\n      render={({ field, fieldState: { error } }) => (\n        <Input\n          value={field.value || \"\"}\n          onChange={field.onChange}\n          error={!!error}\n          helperText={error?.message || helperText}\n          placeholder={placeholder}\n          {...rest}\n        />\n      )}\n    />\n  );\n};\n","import { ReactNode } from \"react\";\n\nimport { FormProvider, UseFormReturn } from \"react-hook-form\";\n\nimport { ControlledFileUpload } from \"./file-upload\";\nimport { ControlledInput } from \"./input\";\nimport { Radio } from \"./radio\";\n\ninterface FormProps {\n  children: ReactNode;\n  methods: UseFormReturn<any>;\n  onSubmit: VoidFunction;\n}\n\nconst Form = (props: FormProps) => {\n  // **Props\n  const { methods, children, onSubmit } = props;\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </FormProvider>\n  );\n};\n\nForm.Input = ControlledInput;\nForm.Radio = Radio;\nForm.FileUpload = ControlledFileUpload;\nexport { Form };\n","import { FC, InputHTMLAttributes } from \"react\";\n\nimport { useFormContext } from \"react-hook-form\";\n\nexport interface RadioProps extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  name: string;\n  value: string | number;\n}\n\nexport const Radio: FC<RadioProps> = (props) => {\n  // **Props\n  const { label, value, name } = props;\n\n  const { register } = useFormContext();\n\n  return (\n    <label className=\"form-radio\">\n      <input {...register(name)} type=\"radio\" name={name} value={value} />\n      <span className=\"form-radio__field\"></span>\n      <span className=\"form-radio__label\">{label}</span>\n    </label>\n  );\n};\n","export const getMediaDimensions = (file: File): Promise<{ width: number; height: number }> => {\n  const img = new Image();\n\n  return new Promise((resolve, reject) => {\n    // the following handler will fire after a successful loading of the image\n    img.onload = () => {\n      const { naturalWidth: width, naturalHeight: height } = img;\n      resolve({\n        width,\n        height\n      });\n    };\n\n    // and this handler will fire if there was an error with the image (like if it's not really an image or a corrupted one)\n    img.onerror = () => {\n      reject(\"There was some problem with the image.\");\n    };\n\n    img.src = URL.createObjectURL(file);\n  });\n};\n","import { getMediaDimensions } from \"./get-media-dimensions.helper\";\n\nexport const checkFileResolution = async (filelist: FileList): Promise<boolean> => {\n  const [file] = filelist;\n  let valid = true;\n\n  if (file) {\n    const { width, height } = await getMediaDimensions(file);\n\n    if (width > 70 || height > 70) {\n      valid = false;\n    }\n  }\n  return valid;\n};\n","import { mixed, number, object, string } from \"yup\";\nimport { checkFileResolution, checkIfFilesAreCorrectType, checkIfFilesAreTooBig } from \"utils/helpers\";\n\nexport const UserObject = object({\n  name: string().min(2, \"Name should be 2-60 characters\").max(60, \"Name should be 2-60 characters\").required(),\n  email: string()\n    .matches(\n      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\n      \"Email must be a valid email according to RFC2822\"\n    )\n    .required(),\n  phone: string()\n    .min(13)\n    .max(13)\n    .matches(/^[+380]/g, \"Phone must start +380\")\n    .matches(/^[+]{0,1}380([0-9]{9})$/, \"Phone isn't valid. Example +380XXXXXXXXX\")\n    .required(),\n  // eslint-disable-next-line camelcase\n  position_id: number().required(),\n  photo: mixed()\n    .required(\"You need to provide a file\")\n    .test(\"is-big-file\", \"Size must not exceed 5MB\", checkIfFilesAreTooBig)\n    .test(\"is-resolution-correct\", \"Resolution at least 70x70px\", checkFileResolution)\n    .test(\"is-correct-type\", \"User photo should be jpg/jpeg image\", checkIfFilesAreCorrectType)\n});\n\nexport type UserSchema = ReturnType<typeof UserObject.validateSync>;\n","export const checkIfFilesAreTooBig = (filelist: FileList): boolean => {\n  const [file] = filelist;\n  let valid = true;\n\n  if (file) {\n    const size = file.size / 1024 / 1024;\n    if (size > 5) {\n      valid = false;\n    }\n  }\n  return valid;\n};\n","export const checkIfFilesAreCorrectType = (filelist: FileList): boolean => {\n  const [file] = filelist;\n  let valid = true;\n\n  if (file) {\n    if (![\"image/jpeg\", \"image/jpg\"].includes(file.type)) {\n      valid = false;\n    }\n  }\n\n  return valid;\n};\n","import { FC } from \"react\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from \"components/form\";\nimport { Button, Container, Typography } from \"components/ui\";\nimport { useAppSelector, useDispatchedActions, useRequest, useTranslation } from \"hooks\";\nimport { UsersService } from \"services\";\nimport { getAccesses, getAllPositons, getAllUsers } from \"store/selectors\";\nimport { IMAGES } from \"utils/constants\";\nimport { UserObject, UserSchema } from \"utils/schemas\";\n\nexport const Post: FC = () => {\n  const t = useTranslation();\n\n  const { positions } = useAppSelector(getAllPositons);\n  const { userRegistered } = useAppSelector(getAllUsers);\n  const { token } = useAppSelector(getAccesses);\n  const { resetStoreUsers } = useDispatchedActions();\n\n  const { handleRequest } = useRequest();\n  // **Form\n  const methods = useForm<UserSchema>({\n    mode: \"onChange\",\n    resolver: yupResolver(UserObject)\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n    reset\n  } = methods;\n\n  const convertToBase64 = (file: File) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      methods.setValue(\"photo\", reader.result?.toString());\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const onSubmit = handleRequest(async (data: UserSchema) => {\n    const formData = new FormData();\n    for (const [key, value] of Object.entries(data)) {\n      formData.append(key, value);\n    }\n    formData.set(\"photo\", data.photo[0]);\n\n    if (data.photo.length > 0) {\n      data.photo = convertToBase64(data.photo[0]);\n    }\n\n    const response = await UsersService.addUser(formData, token);\n\n    if (response.status <= 200 && response.status > 299) {\n      throw new Error();\n    }\n\n    reset();\n    resetStoreUsers();\n  });\n\n  return (\n    <section className=\"post\" id=\"sign\">\n      <Container>\n        <Typography tag=\"h2\" variant=\"h1\" center>\n          {!userRegistered ? t.pages.home.post.title : t.pages.home.post.titleSuccess}\n        </Typography>\n        {!userRegistered ? (\n          <Form methods={methods} onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"post__form\">\n              <Form.Input name=\"name\" placeholder={t.forms.name.placeholder} />\n              <Form.Input name=\"email\" placeholder={t.forms.email.placeholder} />\n              <Form.Input name=\"phone\" placeholder={t.forms.phone.placeholder} helperText=\"+38 (XXX) XXX - XX - XX\" />\n              <div className=\"post__radio-group\">\n                <Typography tag=\"p\">Select your position</Typography>\n                {positions?.map((btn) => (\n                  <Form.Radio key={btn.id} label={btn.name} name=\"position_id\" value={btn.id} />\n                ))}\n              </div>\n              <Form.FileUpload name=\"photo\" />\n              <Button className=\"post__form-btn\" type=\"submit\" isLoading={isSubmitting || !isValid}>\n                {t.navigation.signUp}\n              </Button>\n            </div>\n          </Form>\n        ) : (\n          <div className=\"post__image\">{IMAGES.success}</div>\n        )}\n      </Container>\n    </section>\n  );\n};\n","import { FC, useEffect } from \"react\";\n\nimport { useAppSelector } from \"hooks\";\nimport { useDispatchedActions } from \"hooks/use-dispatched-actions\";\nimport { getAccesses, getAllPositons } from \"store/selectors\";\n\nimport { Get } from \"./components/get\";\nimport { Hero } from \"./components/hero\";\nimport { Post } from \"./components/post\";\n\nconst Home: FC = () => {\n  const { positionsStatus } = useAppSelector(getAllPositons);\n  const { tokenStatus } = useAppSelector(getAccesses);\n\n  const { getPositions, getTokenForRegistation } = useDispatchedActions();\n\n  useEffect(() => {\n    if (positionsStatus === \"idle\") {\n      getPositions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [positionsStatus]);\n\n  useEffect(() => {\n    if (tokenStatus === \"idle\") {\n      getTokenForRegistation();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tokenStatus]);\n\n  return (\n    <>\n      <Hero />\n      <Get />\n      <Post />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["getAllPositons","state","position","getAccesses","access","UserCard","props","info","photo","name","email","phone","className","src","alt","loading","IMAGES","tag","center","getAllUsers","user","Get","t","useTranslation","useAppSelector","page","limit","usersStatus","error","users","hasMore","useDispatchedActions","getUsers","incrementPage","loadMoreItems","count","useEffect","id","variant","pages","home","get","title","map","onClick","btn","showMore","getImage","images","heroBg1x","heroBg2x","heroBg1xMob","heroBg2xMob","hasOwnProperty","Hero","srcSet","type","media","width","height","color","hero","description","path","hashLink","navigation","signUp","FileUpload","value","onChange","helperText","rest","classNames","length","getClasses","e","target","files","filename","accept","Input","placeholder","htmlFor","Form","methods","children","onSubmit","defaultValue","control","useFormContext","render","field","fieldState","message","Radio","label","register","getMediaDimensions","file","img","Image","Promise","resolve","reject","onload","naturalWidth","naturalHeight","onerror","URL","createObjectURL","checkFileResolution","filelist","valid","UserObject","object","string","min","max","required","matches","position_id","number","mixed","test","size","includes","Post","positions","userRegistered","token","resetStoreUsers","handleRequest","useRequest","useForm","mode","resolver","yupResolver","handleSubmit","formState","isSubmitting","isValid","reset","convertToBase64","reader","FileReader","onloadend","setValue","result","toString","readAsDataURL","data","formData","FormData","Object","entries","key","append","set","UsersService","response","status","Error","post","titleSuccess","forms","isLoading","positionsStatus","tokenStatus","getPositions","getTokenForRegistation"],"sourceRoot":""}